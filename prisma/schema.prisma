// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Device {
  id            String        @id @default(cuid())
  name          String
  location      String
  type          String        @default("ESP32")
  isActive      Boolean       @default(true)
  lastSeen      DateTime?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  measurements  Measurement[]
  alerts        Alert[]
  
  @@index([name])
  @@index([isActive])
}

model Measurement {
  id            Int           @id @default(autoincrement())
  temperature   Float
  humidity      Float
  acState       Boolean       @default(false)
  acTemperature Float?
  deviceId      String
  device        Device        @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  createdAt     DateTime      @default(now())
  
  @@index([createdAt])
  @@index([deviceId])
}

model Alert {
  id            Int           @id @default(autoincrement())
  type          String        // "HIGH_TEMP", "LOW_TEMP", "HIGH_HUMIDITY", "LOW_HUMIDITY", "DEVICE_OFFLINE"
  message       String
  severity      String        @default("warning") // "info", "warning", "critical"
  resolved      Boolean       @default(false)
  resolvedAt    DateTime?
  deviceId      String
  device        Device        @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  createdAt     DateTime      @default(now())
  
  @@index([type])
  @@index([resolved])
  @@index([deviceId])
}

model Configuration {
  id                    Int      @id @default(autoincrement())
  key                   String   @unique
  value                 String
  description           String?
  updatedAt             DateTime @updatedAt
  
  @@index([key])
}